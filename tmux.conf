set -g prefix C-o
unbind C-b
bind-key C-o send-prefix

set -g default-shell /bin/zsh

# 在tmux 内部加载 tmux.conf
bind r source-file ~/.tmux.conf \; display 'Reloaded!'
#设置终端颜色为256色
set -g default-terminal     "screen-256color"
#设置status-bar颜色
set -g status-fg            white
set -g status-bg            black
#设置status bar格式
set -g status-left-length   40
set -g status-left          "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
set -g status-right         "#[fg=cyan]%b %d %R"
set -g status-interval      60
set -g status-justify       centre
set -g status-position      top

set -g mouse                on    # 开启鼠标

set -g base-index           1     # 窗口编号从 1 开始计数
set -g display-panes-time   10000 # PREFIX-Q 显示编号的驻留时长，单位 ms
set -g pane-base-index      1     # 窗格编号从 1 开始计数
set -g renumber-windows     on    # 关掉某个窗口后，编号重排
set -g history-limit        10000


# bind keymap
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n C-h if-shell  "$is_vim"  "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell  "$is_vim"  "send-keys C-j"  "select-pane -D"
# bind-key -n C-\ if-shell  "$is_vim"  "send-keys C-\\" "select-pane -l"
bind-key -n C-d if-shell  "$is_vim"  "send-keys C-d"  "detach"
bind-key -n C-z if-shell "$is_vim"  "send-keys C-z"  "resize-pane -Z"

bind-key h split-window -h
bind-key j split-window -v
bind-key s setw synchronize-panes

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin "nordtheme/tmux"

run '~/.tmux/plugins/tpm/tpm'

